// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Status {
  active
  inactive
}
enum RideStatus {
  pending
  accepted
  ongoing
  completed
  cancelled
}
enum VehicleType {
    car
    bike
    auto
}


model User{
  id             String       @id @default(uuid())
  fullname       Json   // JSON field to store { firstname, lastname }
  email          String       @unique
  password  String
  source         String
  socketId       String
  rides          Ride[]
}

model Captain{
  id             String       @id @default(uuid())
  fullname       Json   // JSON field to store { firstname, lastname }
  email          String       @unique
  password_hash  String
  source         String
  socketId       String
  status         Status       @default(inactive)
  vehicle        Json
  location       Json
  rides          Ride[]
}

model BlacklistToken {
  id          String       @id @default(uuid())
  token       String       @unique
  createdAt   DateTime     @default(now())
}

model Ride{
  id             String       @id @default(uuid())
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  captain       Captain       @relation(fields: [captainId], references: [id])
  captainId     String
  pickup        String
  destination   String
  fare          Int
  status        RideStatus    @default(pending)
  duration      Int
  distance      Int
  paymentId     String
  orderId       String
  signature     String
  createdAt     DateTime     @default(now())
  otp           String
  }